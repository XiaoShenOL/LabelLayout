apply plugin: 'com.android.library'

ext {
    groupId = 'com.luxiliu'
    artifactId = 'labellayout'

    packageRepo = 'maven'
    packageName = 'LabelLayout'
    packageDescription = 'A layout to display a label text on top of another view'
    packageWebsite = 'https://github.com/luxiliu/LabelLayout'
    packageIssueTracker = 'https://github.com/luxiliu/LabelLayout/issues'
    packageVCS = 'https://github.com/luxiliu/LabelLayout.git'
    packageLicenses = ["Apache-2.0"]
    packageLicenseName = 'The Apache License, Version 2.0'
    packageLicenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
}

android {
    compileSdkVersion rootProject.compile_sdk_version
    buildToolsVersion rootProject.build_tools_version

    defaultConfig {
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode rootProject.version_code
        versionName rootProject.version_name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$rootProject.androidx_appcompat_version"
}

// Maven
apply plugin: 'com.github.dcendents.android-maven'

install {
    repositories.mavenInstaller {
        pom.project {
            name project.ext.packageName
            description project.ext.packageDescription
            url project.ext.packageWebsite
            inceptionYear '2017'

            packaging 'aar'
            groupId project.ext.groupId
            artifactId project.ext.artifactId
            version rootProject.version_name

            licenses {
                license {
                    name project.ext.packageLicenseName
                    url project.ext.packageLicenseUrl
                    distribution 'repo'
                }
            }
            scm {
                connection project.ext.packageVCS
                developerConnection project.ext.packageVCS
                url project.ext.packageWebsite
            }
            developers {
                developer {
                    name 'Luxi Liu'
                    email 'luxi.liu@gmail.com'
                }
            }
        }
    }
}

// Bintray
apply plugin: 'com.jfrog.bintray'

version = rootProject.version_name
group = groupId

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
bintray {
    user = BINTRAY_USER
    key = BINTRAY_APIKEY

    configurations = ['archives']
    pkg {
        repo = project.ext.packageRepo
        name = project.ext.packageName
        desc = project.ext.packageDescription
        websiteUrl = project.ext.packageWebsite
        issueTrackerUrl = project.ext.packageIssueTracker
        vcsUrl = project.ext.packageVCS
        licenses = project.ext.packageLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            gpg {
                sign = true
                passphrase = BINTRAY_GPS_PASSWORD
            }
        }
    }
}
